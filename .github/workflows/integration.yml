name: integration

on: pull_request

jobs:
  lint:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out Git repository
        uses: actions/checkout@main

      - name: Install Node.js
        uses: actions/setup-node@main
        with:
          node-version: 16

      - name: Install Dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  test-core:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out Git repository
        uses: actions/checkout@main

      - name: Install Node.js
        uses: actions/setup-node@main
        with:
          node-version: 16

      - name: Install Dependencies
        run: npm ci

      - name: Unit Test
        run: npm run test:core

  test-web:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out Git repository
        uses: actions/checkout@main

      - name: Install Node.js
        uses: actions/setup-node@main
        with:
          node-version: 16

      - name: Install Dependencies
        run: npm ci

      - name: Unit Test
        run: npm run test:web

  test-desktop:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out Git repository
        uses: actions/checkout@main

      - name: Install Node.js
        uses: actions/setup-node@main
        with:
          node-version: 16

      - name: Install Dependencies
        run: npm ci

      - name: Unit Test
        run: npm run test:desktop

  build-desktop:
    runs-on: ${{ matrix.os }}
    needs: test-desktop, test-web, test-core
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@main

      - name: Install Node.js
        uses: actions/setup-node@main
        with:
          node-version: 16

      - name: Build Electron app
        uses: AllenCellSoftware/action-electron-builder@fms-file-explorer
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}
          package_root: "packages/desktop"
          release: false  # Never release on an integration build
          windows_certs: ${{ secrets.CSC_LINK }}
          windows_certs_password: ${{ secrets.CSC_KEY_PASSWORD }}